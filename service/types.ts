export type SearchCompanyResponseBase = {
    "1. symbol": string;
    "2. name": string;
    "3. type": string;
    "4. region": string;
    "5. marketOpen": string;
    "6. marketClose": string;
    "7. timezone": string;
    "8. currency": string;
    "9. matchScore": string;
};
export type SearchCompanyResponse = {
    bestMatches?: Array<Partial<SearchCompanyResponseBase>>;
};
export type Company = {
    symbol: SearchCompanyResponseBase["1. symbol"];
    name: SearchCompanyResponseBase["2. name"];
};

export type CompanyDetailsResponseBase = {
    Symbol: string;
    AssetType: string;
    Name: string;
    Description: string;
    CIK: string;
    Exchange: string;
    Currency: string;
    Country: string;
    Sector: string;
    Industry: string;
    Address: string;
    FiscalYearEnd: string;
    LatestQuarter: string;
    MarketCapitalization: string;
    EBITDA: string;
    PERatio: string;
    PEGRatio: string;
    BookValue: string;
    DividendPerShare: string;
    DividendYield: string;
    EPS: string;
    RevenuePerShareTTM: string;
    ProfitMargin: string;
    OperatingMarginTTM: string;
    ReturnOnAssetsTTM: string;
    ReturnOnEquityTTM: string;
    RevenueTTM: string;
    GrossProfitTTM: string;
    DilutedEPSTTM: string;
    QuarterlyEarningsGrowthYOY: string;
    QuarterlyRevenueGrowthYOY: string;
    AnalystTargetPrice: string;
    TrailingPE: string;
    ForwardPE: string;
    PriceToSalesRatioTTM: string;
    PriceToBookRatio: string;
    EVToRevenue: string;
    EVToEBITDA: string;
    Beta: string;
    "52WeekHigh": string;
    "52WeekLow": string;
    "50DayMovingAverage": string;
    "200DayMovingAverage": string;
    SharesOutstanding: string;
    SharesFloat: string;
    SharesShort: string;
    SharesShortPriorMonth: string;
    ShortRatio: string;
    ShortPercentOutstanding: string;
    ShortPercentFloat: string;
    PercentInsiders: string;
    PercentInstitutions: string;
    ForwardAnnualDividendRate: string;
    ForwardAnnualDividendYield: string;
    PayoutRatio: string;
    DividendDate: string;
    ExDividendDate: string;
    LastSplitFactor: string;
    LastSplitDate: string;
};
export type CompanyDetailsResponse = Partial<CompanyDetailsResponseBase>;
export type CompanyDetails = {
    name: CompanyDetailsResponseBase["Name"];
    address: CompanyDetailsResponseBase["Address"];
    capitalization: number;
    description: CompanyDetailsResponseBase["Description"];
};
